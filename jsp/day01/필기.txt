1. CS 모델
 - Client Server 모델
 - 간단한 구조로 되어 있는 구조로, 대부분 Server에서 데이터를
처리하고, 클라이언트는 UI를 담당한다.
 - 구조가 간단하여 속도가 좋은 특징이 있으나 확장성은 조금 떨어진다.

 1-1. 장점
 - 구조가 간단하여 속도가 빠르다

 1-2. 단점
 - 구조가 확장의 어려움이 있다.
 - clinet 프로그램을 다운로드 받아 pc에 설치해야 하는 배포의 번거로움

2. Socket 통신
 - 서버와 클라이언트 양방향 연결이 이루어지는 통신으로, 클라이언트도 서버로
 요청을 보낼 수 있고, 서버도 클라이언트로 요청을 보낼 수 있는 통신이다.
 - 클라이언트와 서버 양쪽에서 서로에게 데이터 전달을 하는 방식의 양방향 통신.
 - 보통 스트리밍이나 실시간 채팅등 실시간으로 데이터를 주고 받아야 하는 
경우에는 Connection을 자주 맺고 끊을 수가 없다. 그래서 소켓 통신이 적합하다.
 - 계속 연결을 유지하는 연결지향형 방식이다.

3. Web 환경
 - CS환경이 배포가 어렵다는 단점을 보완한 모델
 - 브라우저만 있으면 어디서든 쉽게 접근 가능

 3.1 장점
 - OS와 브라우저의 제품에 상관없이 어디서든 동작가능
 - 수정된 부분을 쉽게 배포가 가능함.





