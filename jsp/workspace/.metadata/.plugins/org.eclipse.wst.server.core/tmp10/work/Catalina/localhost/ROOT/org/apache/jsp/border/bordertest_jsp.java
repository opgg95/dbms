/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.79
 * Generated at: 2022-06-10 13:32:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.border;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bordertest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("	<title>BBS List</title>\r\n");
      out.write("	<!-- Bootstrap -->\r\n");
      out.write("	<link href=\"bootstrap-3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("	<style>\r\n");
      out.write("		#container {\r\n");
      out.write("			width: 70%;\r\n");
      out.write("			margin: 0 auto;			/* 가로로 중앙에 배치 */\r\n");
      out.write("			padding-top: 10%;		/* 테두리와 내용 사이의 패딩 여백 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#list {\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("		#write {\r\n");
      out.write("			text-align: right;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* Bootstrap 수정 */\r\n");
      out.write("		.table > thead {\r\n");
      out.write("			background-color: #b3c6ff;\r\n");
      out.write("		}\r\n");
      out.write("		.table > thead > tr > th {\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		.table-hover > tbody > tr:hover {\r\n");
      out.write("			background-color: #e6ecff;\r\n");
      out.write("		}\r\n");
      out.write("		.table > tbody > tr > td {\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		.table > tbody > tr > #title {\r\n");
      out.write("			text-align: left;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		div > #paging {\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.hit {\r\n");
      out.write("			animation-name: blink;\r\n");
      out.write("			animation-duration: 1.5s;\r\n");
      out.write("			animation-timing-function: ease;\r\n");
      out.write("			animation-iteration-count: infinite;\r\n");
      out.write("			/* 위 속성들을 한 줄로 표기하기 */\r\n");
      out.write("			/* -webkit-animation: blink 1.5s ease infinite; */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 애니메이션 지점 설정하기 */\r\n");
      out.write("		/* 익스플로러 10 이상, 최신 모던 브라우저에서 지원 */\r\n");
      out.write("		@keyframes blink {\r\n");
      out.write("			from {color: white;}\r\n");
      out.write("			30% {color: yellow;}\r\n");
      out.write("			to {color: red; font-weight: bold;}\r\n");
      out.write("			/* 0% {color:white;}\r\n");
      out.write("			30% {color: yellow;}\r\n");
      out.write("			100% {color:red; font-weight: bold;} */\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"container\">\r\n");
      out.write("		<div align=\"right\">\r\n");
      out.write("			<!-- Login 검증 -->\r\n");
      out.write("			<!-- jstl의 if문은 else가 없어서 따로 검증해야함. -->\r\n");
      out.write("			<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id != null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("			</c:if>\r\n");
      out.write("			<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id == null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("			</c:if>\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("		<div id=\"list\">\r\n");
      out.write("			<b>게시판 (전체 글: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")</b>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"write\">\r\n");
      out.write("			<a href=\"/bbs/writeForm.bbs?pageNum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">글쓰기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div>\r\n");
      out.write("			<table class=\"table table-striped table-bordered table-hover\">\r\n");
      out.write("				<thead>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th width=\"10%\">번호</th>\r\n");
      out.write("						<th width=\"50%\">제목</th>\r\n");
      out.write("						<th width=\"10%\">작성자</th>\r\n");
      out.write("						<th width=\"20%\">작성일</th>\r\n");
      out.write("						<th width=\"10%\">조회</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</thead>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					<c:forEach var=\"article\" items=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${articles}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" varStatus=\"status\">\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.articleNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("							<td id=\"title\">\r\n");
      out.write("								<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.depth > 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("									&nbsp;&nbsp;\r\n");
      out.write("								</c:if>\r\n");
      out.write("								<a href=\"/bbs/content.bbs?articleNumber=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.articleNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&pageNum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("								<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.hit >= 20}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("									<span class=\"hit\">hit!</span>\r\n");
      out.write("								</c:if>\r\n");
      out.write("							</td>\r\n");
      out.write("							<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.writeDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("							<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.hit}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("						<tr>\r\n");
      out.write("					</c:forEach>\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("			\r\n");
      out.write("			<!-- Paging 처리 -->\r\n");
      out.write("			<div id=\"paging\">\r\n");
      out.write("				");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
